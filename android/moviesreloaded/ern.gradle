// WORKSPACE is defined in Looper as the root working directory for the job
// When running on local workstation, we're just using HOME
final String HOMEDIR = System.getenv('WORKSPACE') ?: System.getProperty('user.home')
final String CONTAINER_PATH = "$HOMEDIR/.ern/containergen/out/android"

task createErnDevContainer(type: Exec) {
    commandLine "ern", "create-container", "-m", "https://github.com/electrode-io/movies-reloaded-miniapp.git", "--platform", "android"
}

task deleteApiImplSrc(type: Delete) {
    delete "$CONTAINER_PATH/lib/src/main/java/com/ern/api/impl"
}
task copyApiImplSrc(type: Copy) {
    from "${System.getProperty('user.dir')}/lib/src/main/java/com/ern/api/impl"
    into "$CONTAINER_PATH/lib/src/main/java/com/ern/api/impl"
}

// Patch container sources for in-progress androidx migration (Jan 2022) - Remove later

task patchApiSrc(type: Copy) {
    from "$CONTAINER_PATH/lib/src/main/java/com/ernnavigationApi/ern"
    into "$buildDir/tmp/patched-api"
    filter { line -> line.replaceAll('android\\.support', 'androidx') }
    filter { line -> line.replaceAll('ernnavigationApi', 'ernnavigation') }
}
task deleteApiSrc(type: Delete) {
    delete "$CONTAINER_PATH/lib/src/main/java/com/ernnavigationApi"
}
task replaceApiSrc(type: Copy) {
    from "$buildDir/tmp/patched-api"
    into "$CONTAINER_PATH/lib/src/main/java/com/ernnavigation/ern"
}

task patchBridgeSrc(type: Copy) {
    from "$CONTAINER_PATH/lib/src/main/java/com/walmartlabs/electrode/reactnative/bridge"
    into "$buildDir/tmp/patched-bridge"
    filter { line -> line.replaceAll('android\\.support', 'androidx') }
}
task deleteBridgeSrc(type: Delete) {
    delete "$CONTAINER_PATH/lib/src/main/java/com/walmartlabs/electrode/reactnative/bridge"
}
task replaceBridgeSrc(type: Copy) {
    from "$buildDir/tmp/patched-bridge"
    into "$CONTAINER_PATH/lib/src/main/java/com/walmartlabs/electrode/reactnative/bridge"
}

task patchPluginsSrc(type: Copy) {
    from "$CONTAINER_PATH/lib/src/main/java/com/walmartlabs/ern/container/plugins"
    into "$buildDir/tmp/patched-plugins"
    filter { line -> line.replaceAll('android\\.support', 'androidx') }
}
task deletePluginsSrc(type: Delete) {
    delete "$CONTAINER_PATH/lib/src/main/java/com/walmartlabs/ern/container/plugins"
}
task replacePluginsSrc(type: Copy) {
    from "$buildDir/tmp/patched-plugins"
    into "$CONTAINER_PATH/lib/src/main/java/com/walmartlabs/ern/container/plugins"
}

task patchContainer {
    dependsOn deleteApiImplSrc
    dependsOn copyApiImplSrc
    dependsOn patchApiSrc
    dependsOn deleteApiSrc
    dependsOn replaceApiSrc
    dependsOn patchBridgeSrc
    dependsOn deleteBridgeSrc
    dependsOn replaceBridgeSrc
    dependsOn patchPluginsSrc
    dependsOn deletePluginsSrc
    dependsOn replacePluginsSrc
    tasks.findByName('copyApiImplSrc').mustRunAfter 'deleteApiImplSrc'
    tasks.findByName('patchApiSrc').mustRunAfter 'copyApiImplSrc'
    tasks.findByName('deleteApiSrc').mustRunAfter 'patchApiSrc'
    tasks.findByName('replaceApiSrc').mustRunAfter 'deleteApiSrc'
    tasks.findByName('patchBridgeSrc').mustRunAfter 'replaceApiSrc'
    tasks.findByName('deleteBridgeSrc').mustRunAfter 'patchBridgeSrc'
    tasks.findByName('replaceBridgeSrc').mustRunAfter 'deleteBridgeSrc'
    tasks.findByName('patchPluginsSrc').mustRunAfter 'replaceBridgeSrc'
    tasks.findByName('deletePluginsSrc').mustRunAfter 'patchPluginsSrc'
    tasks.findByName('replacePluginsSrc').mustRunAfter 'deletePluginsSrc'
}

task publishErnContainer(type: Exec) {
    commandLine "ern", "publish-container", "-p", "maven", "-u", "file://$HOMEDIR/.m2/repository", "--platform", "android", "-e", '{"artifactId":"container-movies-reloaded","groupId":"com.walmartlabs.ern"}'
}

task createAndPublishErnDevContainer() {
    dependsOn 'createErnDevContainer'
    dependsOn 'patchContainer'
    dependsOn 'publishErnContainer'
    tasks.findByName('patchContainer').mustRunAfter 'createErnDevContainer'
    tasks.findByName('publishErnContainer').mustRunAfter 'patchContainer'
}
